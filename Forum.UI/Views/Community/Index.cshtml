@* @model IEnumerable<Forum.UI.ViewModels.CommunityViewModel>

@{
    ViewData["Title"] = "Index";
}
<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Community List</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="Community" asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> &nbsp; Create New Community
            </a>
        </div>
    </div>
</div> *@

@* <table class="table table-bordered table-striped" style="width:100%">
    <thead>
        <tr>
            <th>
                Community Name
            </th>
            <th>
                Created At
            </th>
            <th>
                Subscription
            </th>
            <th>

            </th>
            <th>

            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var obj in Model)
        {
            <tr id="community-@obj.Id">
                <td width="15%">
                    @obj.CommunityName |
                    <a asp-controller="Topic" asp-action="Index" asp-route-communityId="@obj.Id" style="text-decoration:none; color:navy">Topics </a>|
                    <a asp-controller="Post" asp-action="IndexByCommunity" asp-route-communityId="@obj.Id" style="text-decoration:none; color:navy">Posts</a>
                </td>
                <td width="15%">
                    @obj.CreatedAt.Day.@obj.CreatedAt.Month.@obj.CreatedAt.Year @obj.CreatedAt.DayOfWeek
                </td>
                <td width="10%">
                    <button class="btn btn-sm subscribe-button @(obj.IsSubscribed ? "bg-danger" : "bg-success")" data-communityId="@obj.Id" style="border:1px solid black;">
                        <span class="bi" id="like-icon-@obj.Id" style="color:white">
                            @(obj.IsSubscribed ? "Unsubscribe" : "Subscribe")
                        </span>
                    </button>
                </td>
                <td width="10%">
                    <a asp-controller="Topic" asp-action="Create" asp-route-communityId="@obj.Id" style="text-decoration:none; color:navy">
                        Create Topic
                    </a>
                </td>
                <td width="10%">
                    <a asp-controller="Post" asp-action="Create" asp-route-communityId="@obj.Id" style="text-decoration:none; color:navy">
                        Create Post
                    </a>
                </td>
                <td width="10%">
                    <div>
                        <a asp-controller="Community" asp-action="Edit" asp-route-communityId="@obj.Id" style="text-decoration:none; color:navy">
                            <i class="bi bi-pencil-square" style="color:orange"></i> Edit</a>
                    </div>
                </td>
                <td width="10%">
                    <div>
                        <button class="openModal" style="background-color: inherit; border: none; color: darkred;" data-communityId="@obj.Id">
                            <i class="bi bi-x-circle" style="color:darkred"></i> Delete</button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table> *@

<table id="communityTable" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Community Name</th>
            <th>Created At</th>
            <th>Subscription</th>
            <th>Actions</th>
        </tr>
    </thead>
</table>

<partial name="_DeleteOptionsModalCommunity"></partial>

<script>
    $(document).ready(function () {
        //List communities
        $('#communityTable').DataTable({
            "ajax": {
                "url": "/Community/GetCommunities",
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                {   "data": "id", "visible": false},
                {   "data": "communityName",
                    "render": function (data, type, row) {
                        return data + ` | <a href="/Topic/Index/?communityId=${row.id}" style="text-decoration:none; color:navy">Topics</a> |
                        <a href="/Post/IndexByCommunity/?communityId=${row.id}" style="text-decoration:none; color:navy">Posts</a>`;
                    } 
                },
                {   "data": "createdAt" },
                {
                    "data": "isSubscribed",
                    "render": function (data, type, row) {
                        let buttonClass = data ? "bg-danger" : "bg-success";
                        let text = data ? "Unsubscribe" : "Subscribe";
                        return `<button class="btn btn-sm subscribe-button ${buttonClass}" data-communityId="${row.id}" style="border:1px solid black;">
                                    <span class="bi" id="like-icon-${row.id}" style="color:white">${text}</span>
                                </button>`;
                    }
                },
                {
                    "data": null,
                    "render": function (data, type, row) {
                        return `
                            <a href="/Community/Edit/?communityId=${row.id}" style="text-decoration:none; color:navy">
                                <i class="bi bi-pencil-square" style="color:orange"></i> Edit
                            </a>
                            &nbsp; | &nbsp;
                            <button class="openModal" style="background-color: initial; border: none; color: darkred;" data-communityId="${row.id}">
                                <i class="bi bi-x-circle" style="color:darkred"></i> Delete
                            </button>`;
                    }
                }
            ],
            "error": function (xhr, error, code) {
                toastr.error("Error in DataTable AJAX:", error);
                toastr.error("Response:", xhr.responseText);
            }
        });
    });

    $(document).ready(function () {
        //Open Delete Modal
        $(document).on("click", ".openModal", function () {
            var communityId = $(this).attr("data-communityId");

            $("#deleteOptionsModal").modal("show");
            $("#deleteId").val(communityId);
        });
    });

    $(document).ready(function () {
        //Show the select list or hide it
        $('input[name="deleteOption"]').change(function () {
            var selectList = $("#selectCommunityList");

            if ($("#transferTopics").is(":checked")) {
                selectList.removeClass("d-none").show();
            } else {
                selectList.addClass("d-none").hide();
            }
        });
    });

    $(document).ready(function () {
        //Load the communities into the select list
        $(document).on("click", ".openModal", function () {
            var communityList = $("#communities");
            var communityId = $("#deleteId").val();

            $.ajax({
                type: "GET",
                url: "/Community/GetOtherCommunities",
                data: { communityId: communityId },
                dataType: "json",
                success: function (data) {
                    communityList.html('<option value="">Select a Community</option>');
                    data.forEach(community => {
                        var option = document.createElement("option");
                        option.value = community.value;
                        option.textContent = community.text;
                        communityList.append(option);
                    });
                }, error: function () {
                    toastr.error("Error loading communities.");
                }
            });
        });
    });

    $(document).ready(function () {
        $(document).on("click", "#confirmDeleteOption", function () {
            var isTransfer = $("#transferTopics").is(":checked");
            var isDeleteEverything = $("#deleteEverything").is(":checked");
            var communityId = $("#deleteId").val();
            var token = $('#deleteOptionsModal input[name="__RequestVerificationToken"]').val();

            if (isDeleteEverything) {
                $.ajax({
                    type: "POST",
                    url: "/Community/DeleteCommunityCascading",
                    data: { 
                        communityId: communityId, 
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            $("#deleteOptionsModal").modal("hide");
                            $("#community-" + communityId).remove();
                            toastr.success(response.message);
                        } else {
                            toastr.error("Error: " + response.message);
                        }
                    },
                    error: function () {
                        toastr.error("Error deleting community.");
                    }
                });
            }

            if (isTransfer) {
                var selectedCommunity = $("select#communities").children("option:selected").val();

                $.ajax({
                    type: "POST",
                    url: "/Community/ChangeTopicsCommunity",
                    data: { 
                        oldCommunityId: communityId,
                        newCommunityId: selectedCommunity,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                        } else {
                            toastr.error("Error: " + response.message);
                        }
                    },
                    error: function () {
                        toastr.error("Error transferring topics and posts to new community.");
                    }
                });

                $.ajax({
                    type: "POST",
                    url: "/Community/DeleteCommunity",
                    data: { 
                        communityId: communityId,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            $("#deleteOptionsModal").modal("hide");
                            $("#community-" + communityId).remove();
                            toastr.success(response.message);
                        } else {
                            toastr.error("Error: " + response.message);
                        }
                    },
                    error: function () {
                        toastr.error("Error deleting community.");
                    }
                });
            }

        });
    });

    $(document).ready(function () {
        //Subscribe to Community
        $(document).on("click", ".subscribe-button", function () {
            var communityId = $(this).attr("data-communityId");
            var icon = $("#like-icon-" + communityId);
            var button = $(this);

            if (icon.text().trim() === "Unsubscribe") button.addClass("bg-danger");
            else button.addClass("bg-success");

            $.ajax({
                type: "POST",
                url: "/Community/SubscribeToCommunity",
                data: { communityId: communityId },
                dataType: "json",
                success: function (data) {
                    if (data.isSubscribed) {
                        icon.text("Unsubscribe");
                        button.removeClass("bg-success").addClass("bg-danger");
                    } else {
                        icon.text("Subscribe");
                        button.removeClass("bg-danger").addClass("bg-success");
                    }
                }, error: function () {
                    console.error("Error subscribing to community.");
                }
            });
        });
    });
</script>