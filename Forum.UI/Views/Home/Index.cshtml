@model Forum.UI.ViewModels.PostListViewModel

@{
    ViewData["Title"] = "Home";
}

<h2 style="color:darkgreen"><span style="color:darkred">Home</span></h2>

<div class="container p-3">
    <div class="row pt-4">
        <div class="text-end">
            <a asp-controller="Post" asp-action="Create" asp-route-communityId="@Model.CommunityId" asp-route-topicId="@Model.TopicId" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> &nbsp; Post Something
            </a>
        </div>
    </div>
</div>
@foreach (var post in Model.Posts)
{
    <table class="table table-bordered table-striped" id="post-@post.Id">
        <thead>
            <tr>
                <th>Community</th>
                <th>Topic</th>
                <th>Post Title</th>
                <th>Created At</th>
                <th>Like</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@post.CommunityName</td>
                <td>@post.TopicName</td>
                <td>@post.PostContent.PostTitle</td>
                <td>@post.CreatedAt.Day.@post.CreatedAt.Month.@post.CreatedAt.Year @post.CreatedAt.DayOfWeek</td>
                <td>
                    <button class="btn btn-sm like-button @(post.IsLiked ? "bg-danger" : "bg-success")" data-id="@post.Id" style="border:1px solid black;">
                        <span class="bi" id="like-icon-@post.Id" style="color:white">
                            @(post.IsLiked ? "Unlike" : "Like")
                        </span>
                    </button>
                </td>
                <td>
                    <div>
                        <a asp-controller="Post" asp-action="Edit" asp-route-id="@post.Id"
                           style="text-decoration:none; color:navy">
                            <i class="bi bi-pencil-square" style="color:orange"></i> Edit
                        </a>
                    </div>
                </td>
                <td>
                    <div>
                        <button class="openModal" style="background-color: inherit; border: none; color: darkred;" data-id="@post.Id">
                            <i class="bi bi-x-circle" style="color:darkred"></i> Delete</button>
                    </div>
                </td>
            </tr>
            <tr>
                @if (!string.IsNullOrEmpty(post.PostContent.ImagePath))
                {
                    <img src="@post.PostContent.ImagePath" alt="@post.PostContent.PostTitle" class="img-fluid" style="max-width:200px; max-height:200px; border-radius:5px;" />
                }
            </tr>
            <tr>
                <td colspan="7" class="text-center">@post.PostContent.PostDescription</td>
            </tr>
        </tbody>
    </table>
}

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteConfirmationModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" id="modalContent"></div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //Open Delete Modal
        $(".openModal").each(function () {
            var button = $(this);
            var id = button.attr("data-id");

            button.click(function () {
                $.ajax({
                    type: "GET",
                    url: "/Post/Delete",
                    success: function (data) {
                            $("#modalContent").html(data);
                            $("#deleteModal").modal("show");
                            $("#deleteId").val(id);
                    }, error: function () {
                        toastr.error("Error opening the modal.");
                    }
                });
            });
        });
    });

    $(document).ready(function () {
        //Delete the Post
        $(document).on("click", "#confirmDelete", function () {
            var id = $("#deleteId").val();
            var token = $('input[name="__RequestVerificationToken"]').val(); // Get CSRF token

            $.ajax({
                type: "POST",
                url: "/Post/DeletePost",
                data: { 
                    id: id, 
                    __RequestVerificationToken: token // Include CSRF token
                },
                success: function (response) {
                    if (response.success) {
                        $("#deleteModal").modal("hide");
                        $("#post-" + id).remove();
                        toastr.success(response.message);
                    } else {
                        toastr.error("Error: " + response.message);
                    }
                },
                error: function () {
                    toastr.error("Error deleting post.");
                }
            });
        });
    });

    $(document).ready(function () {
        //Like post
        $(".like-button").each(function () {
            var button = $(this);
            var postId = button.data("id");
            var icon = $("#like-icon-" + postId);

            if (icon.text().trim() === "Unlike") button.addClass("bg-danger");
            else button.addClass("bg-success");

            button.click(function () {
                $.ajax({
                    type: "POST",
                    url: "/Post/LikePost",
                    data: { id : postId },
                    success: function (data) {
                        if (data.isLiked) {
                            icon.text("Unlike");
                            button.removeClass("bg-success").addClass("bg-danger");
                        } else {
                            icon.text("Like");
                            button.removeClass("bg-danger").addClass("bg-success");
                        }
                    }, error: function () {
                        console.error("Error liking post.");
                    }
                });
            });
        });
    });
</script>